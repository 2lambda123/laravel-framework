<?php namespace Illuminate\Routing\Console; use Illuminate\Console\Command; use Symfony\Component\Console\Input\InputOption; use Symfony\Component\Console\Input\InputArgument; use Illuminate\Routing\Generators\ControllerGenerator; class MakeControllerCommand extends Command { protected $name = 'controller:make'; protected $description = 'Create a new resourceful controller'; protected $generator; protected $path; public function __construct(ControllerGenerator $generator, $path) { parent::__construct(); $this->path = $path; $this->generator = $generator; } public function fire() { $this->generateController(); } protected function generateController() { $controller = $this->input->getArgument('name'); $path = $this->getPath(); $options = $this->getBuildOptions(); $this->generator->make($controller, $path, $options); $this->info('Controller created successfully!'); } protected function getPath() { if ( ! is_null($this->input->getOption('path'))) { return $this->laravel['path.base'].'/'.$this->input->getOption('path'); } elseif ($bench = $this->input->getOption('bench')) { return $this->getWorkbenchPath($bench); } return $this->path; } protected function getWorkbenchPath($bench) { $path = $this->laravel['path.base'].'/workbench/'.$bench.'/src/controllers'; if ( ! $this->laravel['files']->isDirectory($path)) { $this->laravel['files']->makeDirectory($path); } return $path; } protected function getBuildOptions() { $only = $this->explodeOption('only'); $except = $this->explodeOption('except'); return compact('only', 'except'); } protected function explodeOption($name) { $option = $this->input->getOption($name); return is_null($option) ? array() : explode(',', $option); } protected function getArguments() { return array( array('name', InputArgument::REQUIRED, 'The name of the controller class'), ); } protected function getOptions() { return array( array('bench', null, InputOption::VALUE_OPTIONAL, 'The workbench the controller belongs to'), array('only', null, InputOption::VALUE_OPTIONAL, 'The methods that should be included'), array('except', null, InputOption::VALUE_OPTIONAL, 'The methods that should be excluded'), array('path', null, InputOption::VALUE_OPTIONAL, 'Where to place the controller'), ); } }
