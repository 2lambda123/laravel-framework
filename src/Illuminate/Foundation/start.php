<?php error_reporting(-1); if ( ! extension_loaded('mcrypt')) { echo 'Mcrypt PHP extension required.'.PHP_EOL; exit(1); } use Illuminate\Http\Request; use Illuminate\Support\Facades\Facade; use Illuminate\Foundation\AliasLoader; use Illuminate\Config\EnvironmentVariables; use Illuminate\Config\Repository as Config; $app->instance('app', $app); if (isset($unitTesting)) { $app['env'] = $env = $testEnvironment; } Facade::clearResolvedInstances(); Facade::setFacadeApplication($app); $app->registerCoreContainerAliases(); with($envVariables = new EnvironmentVariables( $app->getEnvironmentVariablesLoader()))->load($env); $app->instance('config', $config = new Config( $app->getConfigLoader(), $env )); $app->startExceptionHandling(); if ($env != 'testing') ini_set('display_errors', 'Off'); $config = $app['config']['app']; date_default_timezone_set($config['timezone']); $aliases = $config['aliases']; AliasLoader::getInstance($aliases)->register(); Request::enableHttpMethodParameterOverride(); $providers = $config['providers']; $app->getProviderRepository()->load($app, $providers); $app->booted(function() use ($app, $env) { $path = $app['path'].'/start/global.php'; if (file_exists($path)) require $path; $path = $app['path']."/start/{$env}.php"; if (file_exists($path)) require $path; $routes = $app['path'].'/routes.php'; if (file_exists($routes)) require $routes; });
