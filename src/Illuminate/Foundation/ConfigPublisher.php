<?php namespace Illuminate\Foundation; use Illuminate\Filesystem\Filesystem; class ConfigPublisher { protected $files; protected $publishPath; protected $packagePath; public function __construct(Filesystem $files, $publishPath) { $this->files = $files; $this->publishPath = $publishPath; } public function publish($package, $source) { $destination = $this->publishPath."/packages/{$package}"; $this->makeDestination($destination); return $this->files->copyDirectory($source, $destination); } public function publishPackage($package, $packagePath = null) { list($vendor, $name) = explode('/', $package); $path = $packagePath ?: $this->packagePath; $source = $this->getSource($package, $name, $path); return $this->publish($package, $source); } protected function getSource($package, $name, $packagePath) { $source = $packagePath."/{$package}/src/config"; if ( ! $this->files->isDirectory($source)) { throw new \InvalidArgumentException("Configuration not found."); } return $source; } protected function makeDestination($destination) { if ( ! $this->files->isDirectory($destination)) { $this->files->makeDirectory($destination, 0777, true); } } public function setPackagePath($packagePath) { $this->packagePath = $packagePath; } }
