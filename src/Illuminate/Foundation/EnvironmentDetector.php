<?php namespace Illuminate\Foundation; use Closure; class EnvironmentDetector { public function detect($environments, $consoleArgs = null) { if ($consoleArgs) { return $this->detectConsoleEnvironment($environments, $consoleArgs); } else { return $this->detectWebEnvironment($environments); } } protected function detectWebEnvironment($environments) { if ($environments instanceof Closure) { return call_user_func($environments); } foreach ($environments as $environment => $hosts) { foreach ((array) $hosts as $host) { if ($this->isMachine($host)) return $environment; } } return 'production'; } protected function detectConsoleEnvironment($environments, array $args) { if ( ! is_null($value = $this->getEnvironmentArgument($args))) { return head(array_slice(explode('=', $value), 1)); } else { return $this->detectWebEnvironment($environments); } } protected function getEnvironmentArgument(array $args) { return array_first($args, function($k, $v) { return starts_with($v, '--env'); }); } public function isMachine($name) { return str_is($name, gethostname()); } }
