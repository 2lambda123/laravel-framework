<?php namespace Illuminate\Http; use ArrayObject; use Illuminate\Support\Contracts\JsonableInterface; use Illuminate\Support\Contracts\RenderableInterface; class Response extends \Symfony\Component\HttpFoundation\Response { use ResponseTrait; public $original; public function setContent($content) { $this->original = $content; if ($this->shouldBeJson($content)) { $this->headers->set('Content-Type', 'application/json'); $content = $this->morphToJson($content); } elseif ($content instanceof RenderableInterface) { $content = $content->render(); } return parent::setContent($content); } protected function morphToJson($content) { if ($content instanceof JsonableInterface) return $content->toJson(); return json_encode($content); } protected function shouldBeJson($content) { return $content instanceof JsonableInterface || $content instanceof ArrayObject || is_array($content); } public function getOriginalContent() { return $this->original; } }
