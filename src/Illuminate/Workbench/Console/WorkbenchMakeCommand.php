<?php namespace Illuminate\Workbench\Console; use Illuminate\Console\Command; use Illuminate\Workbench\Package; use Illuminate\Workbench\PackageCreator; use Symfony\Component\Console\Input\InputOption; use Symfony\Component\Console\Input\InputArgument; class WorkbenchMakeCommand extends Command { protected $name = 'workbench'; protected $description = 'Create a new package workbench'; protected $creator; public function __construct(PackageCreator $creator) { parent::__construct(); $this->creator = $creator; } public function fire() { $workbench = $this->runCreator($this->buildPackage()); $this->info('Package workbench created!'); $this->callComposerUpdate($workbench); } protected function runCreator($package) { $path = $this->laravel['path.base'].'/workbench'; $plain = ! $this->option('resources'); return $this->creator->create($package, $path, $plain); } protected function callComposerUpdate($path) { chdir($path); passthru('composer install --dev'); } protected function buildPackage() { list($vendor, $name) = $this->getPackageSegments(); $config = $this->laravel['config']['workbench']; return new Package($vendor, $name, $config['name'], $config['email']); } protected function getPackageSegments() { $package = $this->argument('package'); return array_map('studly_case', explode('/', $package, 2)); } protected function getArguments() { return array( array('package', InputArgument::REQUIRED, 'The name (vendor/name) of the package.'), ); } protected function getOptions() { return array( array('resources', null, InputOption::VALUE_NONE, 'Create Laravel specific directories.'), ); } }
