<?php namespace Illuminate\Queue\Jobs; use Pheanstalk_Job; use Illuminate\Container\Container; use Pheanstalk_Pheanstalk as Pheanstalk; class BeanstalkdJob extends Job { protected $pheanstalk; protected $job; public function __construct(Container $container, Pheanstalk $pheanstalk, Pheanstalk_Job $job, $queue) { $this->job = $job; $this->queue = $queue; $this->container = $container; $this->pheanstalk = $pheanstalk; } public function fire() { $this->resolveAndFire(json_decode($this->getRawBody(), true)); } public function getRawBody() { return $this->job->getData(); } public function delete() { parent::delete(); $this->pheanstalk->delete($this->job); } public function release($delay = 0) { $priority = Pheanstalk::DEFAULT_PRIORITY; $this->pheanstalk->release($this->job, $priority, $delay); } public function bury() { $this->pheanstalk->bury($this->job); } public function attempts() { $stats = $this->pheanstalk->statsJob($this->job); return (int) $stats->reserves; } public function getJobId() { return $this->job->getId(); } public function getContainer() { return $this->container; } public function getPheanstalk() { return $this->pheanstalk; } public function getPheanstalkJob() { return $this->job; } }
