<?php namespace Illuminate\Queue\Jobs; use Closure; use Illuminate\Container\Container; class SyncJob extends Job { protected $job; protected $data; public function __construct(Container $container, $job, $data = '') { $this->job = $job; $this->data = $data; $this->container = $container; } public function fire() { $data = json_decode($this->data, true); if ($this->job instanceof Closure) { call_user_func($this->job, $this, $data); } else { $this->resolveAndFire(array('job' => $this->job, 'data' => $data)); } } public function getRawBody() { } public function delete() { parent::delete(); } public function release($delay = 0) { } public function attempts() { return 1; } public function getJobId() { return ''; } }
