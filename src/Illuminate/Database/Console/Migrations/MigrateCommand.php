<?php namespace Illuminate\Database\Console\Migrations; use Illuminate\Database\Migrations\Migrator; use Symfony\Component\Console\Input\InputOption; class MigrateCommand extends BaseCommand { protected $name = 'migrate'; protected $description = 'Run the database migrations'; protected $migrator; protected $packagePath; public function __construct(Migrator $migrator, $packagePath) { parent::__construct(); $this->migrator = $migrator; $this->packagePath = $packagePath; } public function fire() { $this->prepareDatabase(); $pretend = $this->input->getOption('pretend'); $path = $this->getMigrationPath(); $this->migrator->run($path, $pretend); foreach ($this->migrator->getNotes() as $note) { $this->output->writeln($note); } if ($this->input->getOption('seed')) { $this->call('db:seed'); } } protected function prepareDatabase() { $this->migrator->setConnection($this->input->getOption('database')); if ( ! $this->migrator->repositoryExists()) { $options = array('--database' => $this->input->getOption('database')); $this->call('migrate:install', $options); } } protected function getOptions() { return array( array('bench', null, InputOption::VALUE_OPTIONAL, 'The name of the workbench to migrate.', null), array('database', null, InputOption::VALUE_OPTIONAL, 'The database connection to use.'), array('path', null, InputOption::VALUE_OPTIONAL, 'The path to migration files.', null), array('package', null, InputOption::VALUE_OPTIONAL, 'The package to migrate.', null), array('pretend', null, InputOption::VALUE_NONE, 'Dump the SQL queries that would be run.'), array('seed', null, InputOption::VALUE_NONE, 'Indicates if the seed task should be re-run.'), ); } }
