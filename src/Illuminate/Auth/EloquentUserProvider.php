<?php namespace Illuminate\Auth; use Illuminate\Hashing\HasherInterface; class EloquentUserProvider implements UserProviderInterface { protected $hasher; protected $model; public function __construct(HasherInterface $hasher, $model) { $this->model = $model; $this->hasher = $hasher; } public function retrieveById($identifier) { return $this->createModel()->newQuery()->find($identifier); } public function retrieveByCredentials(array $credentials) { $query = $this->createModel()->newQuery(); foreach ($credentials as $key => $value) { if ( ! str_contains($key, 'password')) $query->where($key, $value); } return $query->first(); } public function validateCredentials(UserInterface $user, array $credentials) { $plain = $credentials['password']; return $this->hasher->check($plain, $user->getAuthPassword()); } public function createModel() { $class = '\\'.ltrim($this->model, '\\'); return new $class; } }
