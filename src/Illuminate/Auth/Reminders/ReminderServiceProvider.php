<?php namespace Illuminate\Auth\Reminders; use Illuminate\Support\ServiceProvider; use Illuminate\Auth\Console\RemindersTableCommand; use Illuminate\Auth\Console\ClearRemindersCommand; use Illuminate\Auth\Console\RemindersControllerCommand; use Illuminate\Auth\Reminders\DatabaseReminderRepository as DbRepository; class ReminderServiceProvider extends ServiceProvider { protected $defer = true; public function register() { $this->registerPasswordBroker(); $this->registerReminderRepository(); $this->registerCommands(); } protected function registerPasswordBroker() { $this->app->bindShared('auth.reminder', function($app) { $reminders = $app['auth.reminder.repository']; $users = $app['auth']->driver()->getProvider(); $view = $app['config']['auth.reminder.email']; return new PasswordBroker( $reminders, $users, $app['mailer'], $view ); }); } protected function registerReminderRepository() { $this->app->bindShared('auth.reminder.repository', function($app) { $connection = $app['db']->connection(); $table = $app['config']['auth.reminder.table']; $key = $app['config']['app.key']; $expire = $app['config']->get('auth.reminder.expire', 60); return new DbRepository($connection, $table, $key, $expire); }); } protected function registerCommands() { $this->app->bindShared('command.auth.reminders', function($app) { return new RemindersTableCommand($app['files']); }); $this->app->bindShared('command.auth.reminders.clear', function($app) { return new ClearRemindersCommand; }); $this->app->bindShared('command.auth.reminders.controller', function($app) { return new RemindersControllerCommand($app['files']); }); $this->commands( 'command.auth.reminders', 'command.auth.reminders.clear', 'command.auth.reminders.controller' ); } public function provides() { return array('auth.reminder', 'auth.reminder.repository', 'command.auth.reminders'); } }
