<?php namespace Illuminate\Support\Traits; trait MacroableTrait { protected static $macros = array(); public static function macro($name, $macro) { static::$macros[$name] = $macro; } public static function hasMacro($name) { return isset(static::$macros[$name]); } public static function __callStatic($method, $parameters) { if (static::hasMacro($method)) { return call_user_func_array(static::$macros[$method], $parameters); } throw new \BadMethodCallException("Method {$method} does not exist."); } public function __call($method, $parameters) { return static::__callStatic($method, $parameters); } }
